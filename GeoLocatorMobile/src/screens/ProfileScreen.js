import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Alert,
  ScrollView,
  ActivityIndicator,
  Switch
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import ApiService from '../services/ApiService';

export default function ProfileScreen({ user, onLogout }) {
  const [analytics, setAnalytics] = useState(null);
  const [userStats, setUserStats] = useState(null);
  const [loading, setLoading] = useState(true);
  const [serverStatus, setServerStatus] = useState(null);
  const [notifications, setNotifications] = useState(true);
  const [autoLocation, setAutoLocation] = useState(true);

  useEffect(() => {
    loadProfileData();
    checkServerStatus();
  }, []);

  const loadProfileData = async () => {
    try {
      setLoading(true);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—â—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
      const analyticsResponse = await ApiService.getAnalytics();
      if (analyticsResponse.success && analyticsResponse.data) {
        setAnalytics(analyticsResponse.data);
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (user && user.id) {
        try {
          const userStatsResponse = await ApiService.getUserStats(user.id);
          if (userStatsResponse.success && userStatsResponse.data) {
            setUserStats(userStatsResponse.data);
          }
        } catch (statsError) {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', statsError);
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è:', error);
    } finally {
      setLoading(false);
    }
  };

  const checkServerStatus = async () => {
    try {
      const status = await ApiService.checkServerStatus();
      setServerStatus(status);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
      setServerStatus({
        online: false,
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞'
      });
    }
  };

  const handleRefresh = async () => {
    await loadProfileData();
    await checkServerStatus();
  };

  const showAbout = () => {
    Alert.alert(
      '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
      'GeoLocator Mobile v1.0.0\n\n' +
      '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—Ä–µ–¥—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ò–ò.\n\n' +
      '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:\n' +
      '‚Ä¢ YOLOv8 –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤\n' +
      '‚Ä¢ Mistral AI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞\n' +
      '‚Ä¢ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç—ã –∏ 2GIS\n' +
      '‚Ä¢ React Native + Expo\n\n' +
      '–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —Ö–∞–∫–∞—Ç–æ–Ω–∞ 2025',
      [{ text: 'OK', style: 'default' }]
    );
  };

  const showHelp = () => {
    Alert.alert(
      '–°–ø—Ä–∞–≤–∫–∞',
      '–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º:\n\n' +
      'üì∑ –ö–∞–º–µ—Ä–∞ - –°–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞\n\n' +
      'üó∫Ô∏è –ö–∞—Ä—Ç–∞ - –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –≤—Å–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç–µ\n\n' +
      'üìã –ò—Å—Ç–æ—Ä–∏—è - –°–º–æ—Ç—Ä–∏—Ç–µ —Å–≤–æ–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—Ç—á–µ—Ç—ã –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ\n\n' +
      'üë§ –ü—Ä–æ—Ñ–∏–ª—å - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n' +
      '–î–ª—è —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∫–∞–º–µ—Ä—É –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.',
      [{ text: '–ü–æ–Ω—è—Ç–Ω–æ', style: 'default' }]
    );
  };

  const renderStatCard = (title, value, icon, color = '#2196F3') => (
    <View style={[styles.statCard, { borderLeftColor: color }]}>
      <View style={styles.statIcon}>
        <Ionicons name={icon} size={24} color={color} />
      </View>
      <View style={styles.statInfo}>
        <Text style={styles.statValue}>{value}</Text>
        <Text style={styles.statTitle}>{title}</Text>
      </View>
    </View>
  );

  const renderServiceStatus = (name, status, icon) => (
    <View style={styles.serviceItem}>
      <Ionicons 
        name={icon} 
        size={20} 
        color={status ? '#4caf50' : '#f44336'} 
      />
      <Text style={styles.serviceName}>{name}</Text>
      <View style={[
        styles.statusDot,
        { backgroundColor: status ? '#4caf50' : '#f44336' }
      ]} />
    </View>
  );

  if (loading) {
    return (
      <View style={styles.loadingContainer}>
        <ActivityIndicator size="large" color="#2196F3" />
        <Text style={styles.loadingText}>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</Text>
      </View>
    );
  }

  return (
    <ScrollView style={styles.container}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è */}
      <View style={styles.header}>
        <View style={styles.avatarContainer}>
          <Ionicons name="person" size={40} color="#2196F3" />
        </View>
        <Text style={styles.userName}>–ê–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω</Text>
        <Text style={styles.userRole}>–£—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</Text>
      </View>

      {/* –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      {userStats && (
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Text>
          
          <View style={styles.statsGrid}>
            {renderStatCard(
              '–ú–æ–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è',
              userStats.total_violations || 0,
              'alert-circle',
              '#f44336'
            )}
            
            {renderStatCard(
              '–ê–∫—Ç–∏–≤–Ω—ã–µ',
              userStats.active_violations || 0,
              'warning',
              '#ff9800'
            )}
            
            {renderStatCard(
              '–†–µ—à–µ–Ω–Ω—ã–µ',
              userStats.resolved_violations || 0,
              'checkmark-circle',
              '#4caf50'
            )}
            
            {renderStatCard(
              '–°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å',
              userStats.avg_confidence 
                ? `${Math.round(userStats.avg_confidence * 100)}%`
                : '–ù/–î',
              'analytics',
              '#2196F3'
            )}
          </View>
          
          {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          {userStats.recent_violations && userStats.recent_violations.length > 0 && (
            <View style={styles.recentViolations}>
              <Text style={styles.recentTitle}>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è:</Text>
              {userStats.recent_violations.slice(0, 3).map((violation, index) => (
                <View key={index} style={styles.recentItem}>
                  <Ionicons 
                    name="alert-circle" 
                    size={16} 
                    color="#f44336" 
                  />
                  <Text style={styles.recentText}>
                    {violation.category || '–ù–∞—Ä—É—à–µ–Ω–∏–µ'} - {new Date(violation.created_at).toLocaleDateString('ru-RU')}
                  </Text>
                </View>
              ))}
            </View>
          )}
        </View>
      )}
      
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã */}
      {analytics && (
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</Text>
          
          <View style={styles.statsGrid}>
            {renderStatCard(
              '–í—Å–µ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π',
              analytics.summary?.total_violations || 0,
              'globe',
              '#6c757d'
            )}
            
            {renderStatCard(
              '–í—Å–µ–≥–æ —Ñ–æ—Ç–æ',
              analytics.summary?.total_photos || 0,
              'camera',
              '#6c757d'
            )}
            
            {renderStatCard(
              '–ó–∞ –Ω–µ–¥–µ–ª—é',
              analytics.summary?.recent_violations || 0,
              'trending-up',
              '#6c757d'
            )}
            
            {renderStatCard(
              '–û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å',
              analytics.summary?.avg_confidence 
                ? `${Math.round(analytics.summary.avg_confidence * 100)}%`
                : '–ù/–î',
              'stats-chart',
              '#6c757d'
            )}
          </View>
        </View>
      )}

      {/* –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>üîß –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤</Text>
        
        <View style={styles.servicesContainer}>
          {serverStatus && (
            <>
              {renderServiceStatus(
                '–°–µ—Ä–≤–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
                serverStatus.online,
                'server'
              )}
              
              {analytics?.services && (
                <>
                  {renderServiceStatus(
                    'YOLO –¥–µ—Ç–µ–∫—Ç–æ—Ä',
                    analytics.services.yolo_detector,
                    'eye'
                  )}
                  {renderServiceStatus(
                    'Mistral AI',
                    analytics.services.mistral_ai,
                    'bulb'
                  )}
                  
                  {renderServiceStatus(
                    '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö',
                    analytics.services.database,
                    'library'
                  )}
                  
                  {renderServiceStatus(
                    '–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è',
                    analytics.services.geolocation,
                    'location'
                  )}
                </>
              )}
            </>
          )}
        </View>
        
        <TouchableOpacity style={styles.refreshButton} onPress={handleRefresh}>
          <Ionicons name="refresh" size={16} color="#2196F3" />
          <Text style={styles.refreshText}>–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å</Text>
        </TouchableOpacity>
      </View>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</Text>
        
        <View style={styles.settingItem}>
          <View style={styles.settingInfo}>
            <Ionicons name="notifications" size={20} color="#666" />
            <Text style={styles.settingText}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
          </View>
          <Switch
            value={notifications}
            onValueChange={setNotifications}
            trackColor={{ false: '#ccc', true: '#2196F3' }}
            thumbColor={notifications ? '#fff' : '#fff'}
          />
        </View>
        
        <View style={styles.settingItem}>
          <View style={styles.settingInfo}>
            <Ionicons name="location" size={20} color="#666" />
            <Text style={styles.settingText}>–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è</Text>
          </View>
          <Switch
            value={autoLocation}
            onValueChange={setAutoLocation}
            trackColor={{ false: '#ccc', true: '#2196F3' }}
            thumbColor={autoLocation ? '#fff' : '#fff'}
          />
        </View>
      </View>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {user && (
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</Text>
          
          <View style={styles.userInfo}>
            <View style={styles.userAvatar}>
              <Ionicons name="person" size={40} color="#2196F3" />
            </View>
            <View style={styles.userDetails}>
              <Text style={styles.userNameProfile}>{user?.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</Text>
              <Text style={styles.userEmail}>{user?.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</Text>
              <Text style={styles.userStatus}>
                {user?.id && typeof user.id === 'string' && user.id.startsWith('guest_') ? '–ì–æ—Å—Ç–µ–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
              </Text>
              {userStats && (
                <Text style={styles.userJoinDate}>
                  –£—á–∞—Å—Ç–Ω–∏–∫ —Å {userStats.join_date ? new Date(userStats.join_date).toLocaleDateString('ru-RU') : '–Ω–µ–¥–∞–≤–Ω–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏'}
                </Text>
              )}
            </View>
          </View>
        </View>
      )}

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</Text>
        
        <TouchableOpacity style={styles.actionItem} onPress={showHelp}>
          <Ionicons name="help-circle" size={20} color="#2196F3" />
          <Text style={styles.actionText}>–°–ø—Ä–∞–≤–∫–∞</Text>
          <Ionicons name="chevron-forward" size={16} color="#ccc" />
        </TouchableOpacity>
        
        <TouchableOpacity style={styles.actionItem} onPress={showAbout}>
          <Ionicons name="information-circle" size={20} color="#2196F3" />
          <Text style={styles.actionText}>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</Text>
          <Ionicons name="chevron-forward" size={16} color="#ccc" />
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={styles.actionItem} 
          onPress={() => {
            Alert.alert(
              '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å',
              '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ?\n\nEmail: support@geolocator.ru\nTelegram: @geolocator_support',
              [{ text: 'OK', style: 'default' }]
            );
          }}
        >
          <Ionicons name="mail" size={20} color="#2196F3" />
          <Text style={styles.actionText}>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</Text>
          <Ionicons name="chevron-forward" size={16} color="#ccc" />
        </TouchableOpacity>

        {onLogout && (
          <TouchableOpacity 
            style={[styles.actionItem, styles.logoutButton]} 
            onPress={() => {
              Alert.alert(
                '–í—ã—Ö–æ–¥',
                '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞?',
                [
                  { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
                  { text: '–í—ã–π—Ç–∏', style: 'destructive', onPress: onLogout }
                ]
              );
            }}
          >
            <Ionicons name="log-out" size={20} color="#f44336" />
            <Text style={[styles.actionText, styles.logoutText]}>–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞</Text>
            <Ionicons name="chevron-forward" size={16} color="#ccc" />
          </TouchableOpacity>
        )}
      </View>

      {/* –í–µ—Ä—Å–∏—è */}
      <View style={styles.footer}>
        <Text style={styles.versionText}>
          GeoLocator Mobile v1.0.0
        </Text>
        <Text style={styles.copyrightText}>
          ¬© 2025 Hackathon Team AI_Python_Web
        </Text>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f5f5f5',
  },
  loadingText: {
    marginTop: 10,
    fontSize: 16,
    color: '#666',
  },
  header: {
    backgroundColor: 'white',
    alignItems: 'center',
    padding: 30,
    borderBottomWidth: 1,
    borderBottomColor: '#e0e0e0',
  },
  avatarContainer: {
    width: 80,
    height: 80,
    borderRadius: 40,
    backgroundColor: '#e3f2fd',
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 15,
  },
  userName: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 5,
  },
  userRole: {
    fontSize: 14,
    color: '#666',
  },
  section: {
    backgroundColor: 'white',
    marginTop: 10,
    paddingHorizontal: 20,
    paddingVertical: 15,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 15,
  },
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  statCard: {
    width: '48%',
    backgroundColor: '#f8f9fa',
    borderRadius: 10,
    padding: 15,
    marginBottom: 10,
    borderLeftWidth: 4,
    flexDirection: 'row',
    alignItems: 'center',
  },
  statIcon: {
    marginRight: 10,
  },
  statInfo: {
    flex: 1,
  },
  statValue: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
  },
  statTitle: {
    fontSize: 12,
    color: '#666',
    marginTop: 2,
  },
  servicesContainer: {
    backgroundColor: '#f8f9fa',
    borderRadius: 10,
    padding: 15,
  },
  serviceItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 8,
  },
  serviceName: {
    flex: 1,
    fontSize: 14,
    color: '#333',
    marginLeft: 10,
  },
  statusDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
  },
  refreshButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    marginTop: 15,
    paddingVertical: 10,
  },
  refreshText: {
    fontSize: 14,
    color: '#2196F3',
    marginLeft: 5,
  },
  settingItem: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingVertical: 15,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  settingInfo: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1,
  },
  settingText: {
    fontSize: 14,
    color: '#333',
    marginLeft: 15,
  },
  actionItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 15,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  actionText: {
    flex: 1,
    fontSize: 14,
    color: '#333',
    marginLeft: 15,
  },
  footer: {
    alignItems: 'center',
    padding: 30,
  },
  versionText: {
    fontSize: 12,
    color: '#999',
    marginBottom: 5,
  },
  copyrightText: {
    fontSize: 12,
    color: '#ccc',
  },
  userInfo: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 15,
  },
  userAvatar: {
    width: 60,
    height: 60,
    borderRadius: 30,
    backgroundColor: '#f0f8ff',
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 15,
  },
  userDetails: {
    flex: 1,
  },
  userName: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 4,
  },
  userEmail: {
    fontSize: 14,
    color: '#666',
    marginBottom: 4,
  },
  userStatus: {
    fontSize: 12,
    color: '#2196F3',
    fontWeight: '500',
  },
  logoutButton: {
    borderTopWidth: 1,
    borderTopColor: '#f0f0f0',
    marginTop: 10,
  },
  logoutText: {
    color: '#f44336',
  },
  recentViolations: {
    marginTop: 15,
    padding: 15,
    backgroundColor: '#f8f9fa',
    borderRadius: 10,
  },
  recentTitle: {
    fontSize: 14,
    fontWeight: '600',
    color: '#495057',
    marginBottom: 10,
  },
  recentItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 4,
  },
  recentText: {
    fontSize: 12,
    color: '#6c757d',
    marginLeft: 8,
    flex: 1,
  },
  userNameProfile: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 4,
  },
  userJoinDate: {
    fontSize: 11,
    color: '#28a745',
    marginTop: 2,
  },
});
