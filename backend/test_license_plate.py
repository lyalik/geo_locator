#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ License Plate Detector
"""

import sys
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Test EasyOCR import
try:
    import easyocr
    logger.info("‚úÖ EasyOCR –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    logger.error(f"‚ùå EasyOCR –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
    sys.exit(1)

# Test our service
try:
    from services.license_plate_detector import LicensePlateDetector
    logger.info("‚úÖ LicensePlateDetector –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    logger.error(f"‚ùå LicensePlateDetector –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
    sys.exit(1)

# Initialize detector
try:
    detector = LicensePlateDetector()
    logger.info("‚úÖ LicensePlateDetector –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    logger.info(f"   Reader status: {detector.reader is not None}")
except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
    sys.exit(1)

logger.info("\n" + "="*60)
logger.info("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
logger.info("="*60)
logger.info("License Plate Detector –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
logger.info("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ backend –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
logger.info("  1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–µ–∫—É—â–∏–π backend (Ctrl+C)")
logger.info("  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./start_demo.sh")
