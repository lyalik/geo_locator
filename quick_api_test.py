#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API —Å –∫–ª—é—á–∞–º–∏
"""
import requests
import json

# –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–ª—é—á–∏ –∑–¥–µ—Å—å:
YANDEX_KEY = "6b7fac7-fc7f-4c1c-09bd-c354cd93f"  # –ö–ª—é—á –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
DGIS_KEY = "ruxrqk2730"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π 2GIS –∫–ª—é—á

def test_yandex():
    print("üîç –¢–µ—Å—Ç Yandex API...")
    url = 'https://geocode-maps.yandex.ru/1.x/'
    params = {
        'apikey': YANDEX_KEY,
        'geocode': '–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å, –ú–æ—Å–∫–≤–∞',
        'format': 'json',
        'results': 1,
        'lang': 'ru_RU'
    }
    
    try:
        response = requests.get(url, params=params, timeout=10)
        print(f"Yandex —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            geo_objects = data.get('response', {}).get('GeoObjectCollection', {}).get('featureMember', [])
            if geo_objects:
                geo_object = geo_objects[0]['GeoObject']
                coordinates = geo_object['Point']['pos'].split()
                print(f"‚úÖ Yandex —Ä–∞–±–æ—Ç–∞–µ—Ç! –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {coordinates[1]}, {coordinates[0]}")
                return True
        
        print(f"‚ùå Yandex –æ—à–∏–±–∫–∞: {response.text}")
        return False
    except Exception as e:
        print(f"‚ùå Yandex –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def test_dgis():
    print("\nüîç –¢–µ—Å—Ç 2GIS API...")
    url = 'https://catalog.api.2gis.com/3.0/items'
    params = {
        'key': DGIS_KEY,
        'q': '–∫–∞—Ñ–µ',
        'point': '37.6176,55.7558',
        'radius': 1000,
        'region_id': 1,
        'page_size': 1
    }
    
    try:
        response = requests.get(url, params=params, timeout=10)
        print(f"2GIS —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if 'error' not in data.get('meta', {}):
                items = data.get('result', {}).get('items', [])
                print(f"‚úÖ 2GIS —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ: {len(items)} –æ–±—ä–µ–∫—Ç–æ–≤")
                return True
            else:
                print(f"‚ùå 2GIS API –æ—à–∏–±–∫–∞: {data['meta']['error']}")
        else:
            print(f"‚ùå 2GIS HTTP –æ—à–∏–±–∫–∞: {response.text}")
        return False
    except Exception as e:
        print(f"‚ùå 2GIS –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ API")
    print("=" * 30)
    
    if YANDEX_KEY == "6b7fac7-fc7f-4c1c-09bd-c354cd93f":
        print("‚ö†Ô∏è  –ó–∞–º–µ–Ω–∏—Ç–µ YANDEX_KEY –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á!")
    
    if DGIS_KEY == "YOUR_DGIS_KEY":
        print("‚ö†Ô∏è  –ó–∞–º–µ–Ω–∏—Ç–µ DGIS_KEY –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á!")
    
    yandex_ok = test_yandex()
    dgis_ok = test_dgis()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"Yandex: {'‚úÖ' if yandex_ok else '‚ùå'}")
    print(f"2GIS: {'‚úÖ' if dgis_ok else '‚ùå'}")
