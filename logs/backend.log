INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:routes.osm_api:OSM service initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
✅ Maps API registered successfully
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
✅ OSM API registered successfully
✅ Coordinate API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
 * Serving Flask app 'app'
 * Debug mode: on
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://10.0.85.1:5001
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:routes.osm_api:OSM service initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug:127.0.0.1 - - [16/Sep/2025 12:42:19] "GET /health HTTP/1.1" 200 -
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/app.py', reloading
✅ Maps API registered successfully
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
✅ OSM API registered successfully
✅ Coordinate API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:routes.osm_api:OSM service initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/app.py', reloading
✅ Maps API registered successfully
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
✅ OSM API registered successfully
✅ Coordinate API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:routes.osm_api:OSM service initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug:192.168.1.36 - - [16/Sep/2025 12:44:36] "GET /health HTTP/1.1" 200 -
INFO:werkzeug:192.168.1.36 - - [16/Sep/2025 12:44:36] "GET /api/violations/analytics HTTP/1.1" 200 -
INFO:werkzeug:192.168.1.36 - - [16/Sep/2025 12:44:59] "GET /api/violations/analytics HTTP/1.1" 200 -
INFO:werkzeug:192.168.1.36 - - [16/Sep/2025 12:44:59] "GET /health HTTP/1.1" 200 -
INFO:app:📊 Database - Retrieved 86 violations from database
INFO:werkzeug:192.168.1.36 - - [16/Sep/2025 12:45:12] "GET /api/violations/list HTTP/1.1" 200 -
