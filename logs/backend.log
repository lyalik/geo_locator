INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Coordinate API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
 * Serving Flask app 'app'
 * Debug mode: on
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://10.0.85.1:5001
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:08:37] "GET /api/violations/health HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:08:40] "[33mGET /main.0f86f59b14b7a220dc19.hot-update.json HTTP/1.1[0m" 404 -
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:08:40] "[33mGET /logo192.png HTTP/1.1[0m" 404 -
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:08:40] "OPTIONS /api/violations/list HTTP/1.1" 200 -
INFO:app:📊 Database - Retrieved 86 violations from database
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:08:40] "GET /api/violations/list HTTP/1.1" 200 -
INFO:app:📊 Database - Retrieved 86 violations from database
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:08:40] "GET /api/violations/list HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:08:57] "GET /api/violations/health HTTP/1.1" 200 -
INFO:app:📁 File upload - Filename: 'test_image.jpg', Content-Type: 'None'
INFO:app:📁 File validation - allowed_file result: True
INFO:app:🔍 Detection - Starting violation detection for: cfe91741-35aa-433f-8261-2274703a494b.jpg
WARNING:app:🔍 YOLO Detection - Using MOCK detector (service unavailable)
INFO:app:🤖 Mistral AI - Starting enhanced violation analysis
INFO:app:🤖 Mistral AI - Service available: True
INFO:services.mistral_ai_service:🤖 AI raw result: {'success': True, 'source': 'mistral_ai', 'analysis': 'Для проведения анализа нарушений использования нежилого фонда необходимо предоставить конкретные данные или изображения. Однако, я могу предоставить примерный шаблон результата в формате JSON, который можно использовать для оценки:\n\n```json\n{\n  "violations_detected": false,\n  "violations": [],\n  "building_analysis": "Общее состояние здания выглядит удовлетворительным. Нет видимых признаков аварийного состояния или серьезных нарушений.",\n  "recommendations": [\n    "Провести регулярные проверки состояния здания для предотвращения возможных проблем.",\n    "Убедиться, что все внешние изменения и пристройки согласованы с соответствующими органами.",\n    "Проводить регулярные проверки безопасности и технического состояния конструкций."\n  ]\n}\n```\n\nЕсли у вас есть конкретные данные или изображения, которые можно использовать для анализа, пожалуйста, предоставьте их, и я смогу предоставить более точный отчет.', 'model': 'pixtral-12b-2409', 'tokens_used': 621}
INFO:services.mistral_ai_service:🤖 AI analysis text: Для проведения анализа нарушений использования нежилого фонда необходимо предоставить конкретные данные или изображения. Однако, я могу предоставить примерный шаблон результата в формате JSON, который можно использовать для оценки:

```json
{
  "violations_detected": false,
  "violations": [],
  "building_analysis": "Общее состояние здания выглядит удовлетворительным. Нет видимых признаков аварийного состояния или серьезных нарушений.",
  "recommendations": [
    "Провести регулярные проверки состояния здания для предотвращения возможных проблем.",
    "Убедиться, что все внешние изменения и пристройки согласованы с соответствующими органами.",
    "Проводить регулярные проверки безопасности и технического состояния конструкций."
  ]
}
```

Если у вас есть конкретные данные или изображения, которые можно использовать для анализа, пожалуйста, предоставьте их, и я смогу предоставить более точный отчет.
INFO:services.mistral_ai_service:🤖 AI parsed JSON: {'violations_detected': False, 'violations': [], 'building_analysis': 'Общее состояние здания выглядит удовлетворительным. Нет видимых признаков аварийного состояния или серьезных нарушений.', 'recommendations': ['Провести регулярные проверки состояния здания для предотвращения возможных проблем.', 'Убедиться, что все внешние изменения и пристройки согласованы с соответствующими органами.', 'Проводить регулярные проверки безопасности и технического состояния конструкций.']}
INFO:services.mistral_ai_service:🤖 AI - Found 0 real violations
INFO:app:🤖 Mistral AI - Raw result: {'success': True, 'violations': [], 'building_analysis': 'Общее состояние здания выглядит удовлетворительным. Нет видимых признаков аварийного состояния или серьезных нарушений.', 'recommendations': ['Провести регулярные проверки состояния здания для предотвращения возможных проблем.', 'Убедиться, что все внешние изменения и пристройки согласованы с соответствующими органами.', 'Проводить регулярные проверки безопасности и технического состояния конструкций.']}
WARNING:app:🤖 Mistral AI - No violations found or analysis failed
INFO:app:🤖 Mistral AI - Success: True, Violations: []
INFO:app:🔍 Combined Detection - Total violations: 0
INFO:app:🌍 Geolocation - Starting geolocation processing for: cfe91741-35aa-433f-8261-2274703a494b.jpg
INFO:app:🌍 Geolocation - Location hint: 'Moscow, Russia'
INFO:app:🌍 Geolocation - Using real geolocation service
INFO:app:🌍 Geolocation - Result: {'success': False, 'coordinates': None, 'address': None, 'error': 'No EXIF data found in image', 'has_gps': False, 'suggest_manual_input': False}
INFO:app:📍 Using auto-detected location: {'coordinates': None, 'address': None, 'has_gps': False, 'source': 'auto'}
INFO:app:📍 Saving coordinates: lat=None, lon=None, has_gps=False
INFO:app:💾 Database - Saved photo 63 with 0 violations
INFO:app:✅ Final Response - Violation ID: 0cb5cc54-8520-409f-85f1-ae67399cbae8
INFO:app:✅ Final Response - Violations found: 0
INFO:app:✅ Final Response - Location: {'coordinates': None, 'address': None, 'has_gps': False, 'source': 'auto'}
INFO:app:✅ Final Response - Full data: {'violation_id': '0cb5cc54-8520-409f-85f1-ae67399cbae8', 'image_path': '/uploads/violations/cfe91741-35aa-433f-8261-2274703a494b.jpg', 'annotated_image_path': None, 'violations': [], 'location': {'coordinates': None, 'address': None, 'has_gps': False, 'source': 'auto'}, 'metadata': {'timestamp': '2025-09-12T15:08:59.873136Z', 'user_id': 'test_user', 'location_notes': 'Test location', 'location_hint': 'Moscow, Russia', 'image_size': {'width': 800, 'height': 600}}}
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:08:59] "POST /api/violations/detect HTTP/1.1" 200 -
INFO:app:🔍 Batch Processing - Analyzing: 92e49b8b-68e8-4232-8416-5071fc1ca972_test_image_0.jpg
INFO:services.mistral_ai_service:🤖 AI raw result: {'success': True, 'source': 'mistral_ai', 'analysis': 'Для выполнения анализа нарушений использования нежилого фонда необходимо предоставить изображение или дополнительные данные о конкретном объекте. Однако, я могу предоставить примерный шаблон JSON-ответа на основе описанных категорий нарушений.\n\n```json\n{\n  "violations_detected": true,\n  "violations": [\n    {\n      "type": "незаконные пристройки",\n      "description": "Самовольная пристройка к зданию с нарушением архитектурных норм.",\n      "severity": "medium",\n      "confidence": 85.0\n    },\n    {\n      "type": "нарушения фасадов",\n      "description": "Неразрешенные вывески и изменение цветовой схемы фасада.",\n      "severity": "low",\n      "confidence": 70.0\n    },\n    {\n      "type": "использование территории",\n      "description": "Незаконная парковка автомобилей на территории здания.",\n      "severity": "medium",\n      "confidence": 90.0\n    },\n    {\n      "type": "техническое состояние",\n      "description": "Аварийное состояние конструкций, угрожающее безопасности.",\n      "severity": "high",\n      "confidence": 95.0\n    }\n  ],\n  "building_analysis": "Общее состояние здания оценивается как удовлетворительное, однако присутствуют серьезные нарушения, требующие немедленного внимания.",\n  "recommendations": [\n    "Удалить незаконные пристройки и привести фасад в соответствие с архитектурными нормами.",\n    "Установить разрешенные вывески и восстановить оригинальную цветовую схему фасада.",\n    "Организовать законную парковку и убрать автомобили с территории здания.",\n    "Провести техническую экспертизу и устранить аварийные состояния конструкций."\n  ]\n}\n```\n\nЭтот пример демонстрирует, как можно структурировать информацию о выявленных нарушениях и предложить рекомендации для их устранения. Для точного анализа необходимо предоставить конкретные данные о объекте.', 'model': 'pixtral-12b-2409', 'tokens_used': 899}
INFO:services.mistral_ai_service:🤖 AI analysis text: Для выполнения анализа нарушений использования нежилого фонда необходимо предоставить изображение или дополнительные данные о конкретном объекте. Однако, я могу предоставить примерный шаблон JSON-ответа на основе описанных категорий нарушений.

```json
{
  "violations_detected": true,
  "violations": [
    {
      "type": "незаконные пристройки",
      "description": "Самовольная пристройка к зданию с нарушением архитектурных норм.",
      "severity": "medium",
      "confidence": 85.0
    },
    {
      "type": "нарушения фасадов",
      "description": "Неразрешенные вывески и изменение цветовой схемы фасада.",
      "severity": "low",
      "confidence": 70.0
    },
    {
      "type": "использование территории",
      "description": "Незаконная парковка автомобилей на территории здания.",
      "severity": "medium",
      "confidence": 90.0
    },
    {
      "type": "техническое состояние",
      "description": "Аварийное состояние конструкций, угрожающее безопасности.",
      "severity": "high",
      "confidence": 95.0
    }
  ],
  "building_analysis": "Общее состояние здания оценивается как удовлетворительное, однако присутствуют серьезные нарушения, требующие немедленного внимания.",
  "recommendations": [
    "Удалить незаконные пристройки и привести фасад в соответствие с архитектурными нормами.",
    "Установить разрешенные вывески и восстановить оригинальную цветовую схему фасада.",
    "Организовать законную парковку и убрать автомобили с территории здания.",
    "Провести техническую экспертизу и устранить аварийные состояния конструкций."
  ]
}
```

Этот пример демонстрирует, как можно структурировать информацию о выявленных нарушениях и предложить рекомендации для их устранения. Для точного анализа необходимо предоставить конкретные данные о объекте.
INFO:services.mistral_ai_service:🤖 AI parsed JSON: {'violations_detected': True, 'violations': [{'type': 'незаконные пристройки', 'description': 'Самовольная пристройка к зданию с нарушением архитектурных норм.', 'severity': 'medium', 'confidence': 85.0}, {'type': 'нарушения фасадов', 'description': 'Неразрешенные вывески и изменение цветовой схемы фасада.', 'severity': 'low', 'confidence': 70.0}, {'type': 'использование территории', 'description': 'Незаконная парковка автомобилей на территории здания.', 'severity': 'medium', 'confidence': 90.0}, {'type': 'техническое состояние', 'description': 'Аварийное состояние конструкций, угрожающее безопасности.', 'severity': 'high', 'confidence': 95.0}], 'building_analysis': 'Общее состояние здания оценивается как удовлетворительное, однако присутствуют серьезные нарушения, требующие немедленного внимания.', 'recommendations': ['Удалить незаконные пристройки и привести фасад в соответствие с архитектурными нормами.', 'Установить разрешенные вывески и восстановить оригинальную цветовую схему фасада.', 'Организовать законную парковку и убрать автомобили с территории здания.', 'Провести техническую экспертизу и устранить аварийные состояния конструкций.']}
INFO:services.mistral_ai_service:🤖 AI - Found 4 real violations
INFO:app:🤖 Mistral AI - Found 4 violations
INFO:app:📊 Combined - Total violations: 4
INFO:app:🔍 Batch Processing - Analyzing: ef20e742-c2de-46e5-a16d-3b2272271471_test_image_1.jpg
INFO:services.mistral_ai_service:🤖 AI raw result: {'success': True, 'source': 'mistral_ai', 'analysis': 'Для анализа несанкционированного использования нежилого фонда на основе предоставленного изображения, необходимо рассмотреть различные аспекты, такие как незаконные пристройки, нарушения фасадов, использование территории и техническое состояние. Однако, так как изображение не предоставлено, я могу предложить общий шаблон отчета в формате JSON.\n\n```json\n{\n  "violations_detected": false,\n  "violations": [],\n  "building_analysis": "Общий анализ здания: На основе предоставленных данных не выявлено нарушений.",\n  "recommendations": [\n    "Провести регулярные проверки здания на предмет незаконных пристроек и изменений фасада.",\n    "Убедиться, что все парковочные и складские зоны используются в соответствии с разрешениями.",\n    "Проводить регулярные проверки технического состояния здания для обеспечения безопасности."\n  ]\n}\n```\n\nЭтот шаблон можно адаптировать в зависимости от конкретных данных и результатов анализа. Если будут обнаружены какие-либо нарушения, их следует добавить в массив "violations" с указанием типа нарушения, описания, уровня серьезности и уровня уверенности.', 'model': 'pixtral-12b-2409', 'tokens_used': 666}
INFO:services.mistral_ai_service:🤖 AI analysis text: Для анализа несанкционированного использования нежилого фонда на основе предоставленного изображения, необходимо рассмотреть различные аспекты, такие как незаконные пристройки, нарушения фасадов, использование территории и техническое состояние. Однако, так как изображение не предоставлено, я могу предложить общий шаблон отчета в формате JSON.

```json
{
  "violations_detected": false,
  "violations": [],
  "building_analysis": "Общий анализ здания: На основе предоставленных данных не выявлено нарушений.",
  "recommendations": [
    "Провести регулярные проверки здания на предмет незаконных пристроек и изменений фасада.",
    "Убедиться, что все парковочные и складские зоны используются в соответствии с разрешениями.",
    "Проводить регулярные проверки технического состояния здания для обеспечения безопасности."
  ]
}
```

Этот шаблон можно адаптировать в зависимости от конкретных данных и результатов анализа. Если будут обнаружены какие-либо нарушения, их следует добавить в массив "violations" с указанием типа нарушения, описания, уровня серьезности и уровня уверенности.
INFO:services.mistral_ai_service:🤖 AI parsed JSON: {'violations_detected': False, 'violations': [], 'building_analysis': 'Общий анализ здания: На основе предоставленных данных не выявлено нарушений.', 'recommendations': ['Провести регулярные проверки здания на предмет незаконных пристроек и изменений фасада.', 'Убедиться, что все парковочные и складские зоны используются в соответствии с разрешениями.', 'Проводить регулярные проверки технического состояния здания для обеспечения безопасности.']}
INFO:services.mistral_ai_service:🤖 AI - Found 0 real violations
INFO:app:📊 Combined - Total violations: 0
/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/notification_service.py:74: SAWarning: fully NULL primary key identity cannot load any object.  This condition may raise an error in a future release.
  user = User.query.get(user_id)
ERROR:services.notification_service:User None not found
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:09:08] "POST /api/violations/batch_detect HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:09:26] "GET /api/violations/health HTTP/1.1" 200 -
INFO:app:📁 File upload - Filename: 'test_image.jpg', Content-Type: 'None'
INFO:app:📁 File validation - allowed_file result: True
INFO:app:🔍 Detection - Starting violation detection for: bf0a7036-7c8c-4be8-ad75-2c24ef5a032f.jpg
WARNING:app:🔍 YOLO Detection - Using MOCK detector (service unavailable)
INFO:app:🤖 Mistral AI - Starting enhanced violation analysis
INFO:app:🤖 Mistral AI - Service available: True
INFO:services.mistral_ai_service:🤖 AI raw result: {'success': True, 'source': 'mistral_ai', 'analysis': 'Для анализа несанкционированного использования нежилого фонда на основе предоставленного изображения, необходимо провести визуальный осмотр и сравнить его с нормативными требованиями. Однако, так как изображение не предоставлено, я могу предложить примерный шаблон отчета в формате JSON.\n\n```json\n{\n  "violations_detected": false,\n  "violations": [],\n  "building_analysis": "Общее состояние здания выглядит удовлетворительным. Нет видимых признаков аварийного состояния или серьезных нарушений.",\n  "recommendations": [\n    "Провести регулярные инспекции для поддержания состояния здания.",\n    "Убедиться, что все внешние изменения и пристройки согласованы с соответствующими органами.",\n    "Проверять соответствие фасада здания архитектурным и цветовым стандартам."\n  ]\n}\n```\n\nЭтот шаблон можно адаптировать в зависимости от конкретных результатов анализа, если изображение будет предоставлено.', 'model': 'pixtral-12b-2409', 'tokens_used': 624}
INFO:services.mistral_ai_service:🤖 AI analysis text: Для анализа несанкционированного использования нежилого фонда на основе предоставленного изображения, необходимо провести визуальный осмотр и сравнить его с нормативными требованиями. Однако, так как изображение не предоставлено, я могу предложить примерный шаблон отчета в формате JSON.

```json
{
  "violations_detected": false,
  "violations": [],
  "building_analysis": "Общее состояние здания выглядит удовлетворительным. Нет видимых признаков аварийного состояния или серьезных нарушений.",
  "recommendations": [
    "Провести регулярные инспекции для поддержания состояния здания.",
    "Убедиться, что все внешние изменения и пристройки согласованы с соответствующими органами.",
    "Проверять соответствие фасада здания архитектурным и цветовым стандартам."
  ]
}
```

Этот шаблон можно адаптировать в зависимости от конкретных результатов анализа, если изображение будет предоставлено.
INFO:services.mistral_ai_service:🤖 AI parsed JSON: {'violations_detected': False, 'violations': [], 'building_analysis': 'Общее состояние здания выглядит удовлетворительным. Нет видимых признаков аварийного состояния или серьезных нарушений.', 'recommendations': ['Провести регулярные инспекции для поддержания состояния здания.', 'Убедиться, что все внешние изменения и пристройки согласованы с соответствующими органами.', 'Проверять соответствие фасада здания архитектурным и цветовым стандартам.']}
INFO:services.mistral_ai_service:🤖 AI - Found 0 real violations
INFO:app:🤖 Mistral AI - Raw result: {'success': True, 'violations': [], 'building_analysis': 'Общее состояние здания выглядит удовлетворительным. Нет видимых признаков аварийного состояния или серьезных нарушений.', 'recommendations': ['Провести регулярные инспекции для поддержания состояния здания.', 'Убедиться, что все внешние изменения и пристройки согласованы с соответствующими органами.', 'Проверять соответствие фасада здания архитектурным и цветовым стандартам.']}
WARNING:app:🤖 Mistral AI - No violations found or analysis failed
INFO:app:🤖 Mistral AI - Success: True, Violations: []
INFO:app:🔍 Combined Detection - Total violations: 0
INFO:app:🌍 Geolocation - Starting geolocation processing for: bf0a7036-7c8c-4be8-ad75-2c24ef5a032f.jpg
INFO:app:🌍 Geolocation - Location hint: 'Moscow, Russia'
INFO:app:🌍 Geolocation - Using real geolocation service
INFO:app:🌍 Geolocation - Result: {'success': False, 'coordinates': None, 'address': None, 'error': 'No EXIF data found in image', 'has_gps': False, 'suggest_manual_input': False}
INFO:app:📍 Using auto-detected location: {'coordinates': None, 'address': None, 'has_gps': False, 'source': 'auto'}
INFO:app:📍 Saving coordinates: lat=None, lon=None, has_gps=False
INFO:app:💾 Database - Saved photo 64 with 0 violations
INFO:app:✅ Final Response - Violation ID: fc8d5d19-1c42-453e-b83b-0af23330536e
INFO:app:✅ Final Response - Violations found: 0
INFO:app:✅ Final Response - Location: {'coordinates': None, 'address': None, 'has_gps': False, 'source': 'auto'}
INFO:app:✅ Final Response - Full data: {'violation_id': 'fc8d5d19-1c42-453e-b83b-0af23330536e', 'image_path': '/uploads/violations/bf0a7036-7c8c-4be8-ad75-2c24ef5a032f.jpg', 'annotated_image_path': None, 'violations': [], 'location': {'coordinates': None, 'address': None, 'has_gps': False, 'source': 'auto'}, 'metadata': {'timestamp': '2025-09-12T15:09:29.494647Z', 'user_id': 'test_user', 'location_notes': 'Test location', 'location_hint': 'Moscow, Russia', 'image_size': {'width': 800, 'height': 600}}}
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:09:29] "POST /api/violations/detect HTTP/1.1" 200 -
INFO:app:🔍 Batch Processing - Analyzing: 23c30dad-b211-4bad-beee-ddfb90cb3c60_test_image_0.jpg
INFO:services.mistral_ai_service:🤖 AI raw result: {'success': True, 'source': 'mistral_ai', 'analysis': 'Для выполнения анализа нарушений использования нежилого фонда необходимо предоставить конкретные данные или изображения для оценки. Однако, я могу предоставить пример результата в формате JSON на основе гипотетических данных.\n\n```json\n{\n  "violations_detected": true,\n  "violations": [\n    {\n      "type": "незаконные пристройки",\n      "description": "Самовольная пристройка к задней части здания",\n      "severity": "medium",\n      "confidence": 85.0\n    },\n    {\n      "type": "нарушения фасадов",\n      "description": "Неразрешенные вывески на фасаде здания",\n      "severity": "low",\n      "confidence": 90.0\n    },\n    {\n      "type": "использование территории",\n      "description": "Незаконная парковка автомобилей на территории",\n      "severity": "medium",\n      "confidence": 80.0\n    },\n    {\n      "type": "техническое состояние",\n      "description": "Аварийное состояние крыши",\n      "severity": "high",\n      "confidence": 95.0\n    }\n  ],\n  "building_analysis": "Здание находится в удовлетворительном состоянии, однако требует значительных ремонтных работ и устранения незаконных пристроек и вывесок.",\n  "recommendations": [\n    "Устранить незаконные пристройки и получить соответствующие разрешения.",\n    "Снять неразрешенные вывески и согласовать их установку.",\n    "Организовать парковку в соответствии с нормативными требованиями.",\n    "Провести ремонт крыши для устранения аварийного состояния."\n  ]\n}\n```\n\nЭтот пример демонстрирует, как может выглядеть результат анализа. Для точного анализа необходимо предоставить конкретные данные или изображения объекта.', 'model': 'pixtral-12b-2409', 'tokens_used': 836}
INFO:services.mistral_ai_service:🤖 AI analysis text: Для выполнения анализа нарушений использования нежилого фонда необходимо предоставить конкретные данные или изображения для оценки. Однако, я могу предоставить пример результата в формате JSON на основе гипотетических данных.

```json
{
  "violations_detected": true,
  "violations": [
    {
      "type": "незаконные пристройки",
      "description": "Самовольная пристройка к задней части здания",
      "severity": "medium",
      "confidence": 85.0
    },
    {
      "type": "нарушения фасадов",
      "description": "Неразрешенные вывески на фасаде здания",
      "severity": "low",
      "confidence": 90.0
    },
    {
      "type": "использование территории",
      "description": "Незаконная парковка автомобилей на территории",
      "severity": "medium",
      "confidence": 80.0
    },
    {
      "type": "техническое состояние",
      "description": "Аварийное состояние крыши",
      "severity": "high",
      "confidence": 95.0
    }
  ],
  "building_analysis": "Здание находится в удовлетворительном состоянии, однако требует значительных ремонтных работ и устранения незаконных пристроек и вывесок.",
  "recommendations": [
    "Устранить незаконные пристройки и получить соответствующие разрешения.",
    "Снять неразрешенные вывески и согласовать их установку.",
    "Организовать парковку в соответствии с нормативными требованиями.",
    "Провести ремонт крыши для устранения аварийного состояния."
  ]
}
```

Этот пример демонстрирует, как может выглядеть результат анализа. Для точного анализа необходимо предоставить конкретные данные или изображения объекта.
INFO:services.mistral_ai_service:🤖 AI parsed JSON: {'violations_detected': True, 'violations': [{'type': 'незаконные пристройки', 'description': 'Самовольная пристройка к задней части здания', 'severity': 'medium', 'confidence': 85.0}, {'type': 'нарушения фасадов', 'description': 'Неразрешенные вывески на фасаде здания', 'severity': 'low', 'confidence': 90.0}, {'type': 'использование территории', 'description': 'Незаконная парковка автомобилей на территории', 'severity': 'medium', 'confidence': 80.0}, {'type': 'техническое состояние', 'description': 'Аварийное состояние крыши', 'severity': 'high', 'confidence': 95.0}], 'building_analysis': 'Здание находится в удовлетворительном состоянии, однако требует значительных ремонтных работ и устранения незаконных пристроек и вывесок.', 'recommendations': ['Устранить незаконные пристройки и получить соответствующие разрешения.', 'Снять неразрешенные вывески и согласовать их установку.', 'Организовать парковку в соответствии с нормативными требованиями.', 'Провести ремонт крыши для устранения аварийного состояния.']}
INFO:services.mistral_ai_service:🤖 AI - Found 4 real violations
INFO:app:🤖 Mistral AI - Found 4 violations
INFO:app:📊 Combined - Total violations: 4
INFO:app:🔍 Batch Processing - Analyzing: 6607d8b3-cdad-4203-9792-cfce96cb9e2b_test_image_1.jpg
ERROR:services.mistral_ai_service:AI API error: HTTPSConnectionPool(host='api.mistral.ai', port=443): Max retries exceeded with url: /v1/chat/completions (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7843574c5370>: Failed to resolve 'api.mistral.ai' ([Errno -2] Name or service not known)"))
INFO:services.mistral_ai_service:🤖 AI raw result: {'success': False, 'error': 'API request failed: HTTPSConnectionPool(host=\'api.mistral.ai\', port=443): Max retries exceeded with url: /v1/chat/completions (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7843574c5370>: Failed to resolve \'api.mistral.ai\' ([Errno -2] Name or service not known)"))'}
ERROR:services.mistral_ai_service:🤖 AI: Analysis failed - {'success': False, 'error': 'API request failed: HTTPSConnectionPool(host=\'api.mistral.ai\', port=443): Max retries exceeded with url: /v1/chat/completions (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7843574c5370>: Failed to resolve \'api.mistral.ai\' ([Errno -2] Name or service not known)"))'}
INFO:app:📊 Combined - Total violations: 0
ERROR:services.notification_service:User None not found
INFO:werkzeug:127.0.0.1 - - [12/Sep/2025 18:09:35] "POST /api/violations/batch_detect HTTP/1.1" 200 -
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py', reloading
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Coordinate API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py', reloading
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Coordinate API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py', reloading
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Coordinate API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py', reloading
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Coordinate API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
Traceback (most recent call last):
  File "/home/denis/Documents/Hackathon_2025/geo_locator/backend/app.py", line 231, in <module>
    from routes.coordinate_api import bp as coordinate_api_bp
  File "/home/denis/Documents/Hackathon_2025/geo_locator/backend/routes/coordinate_api.py", line 6, in <module>
    from services.coordinate_detector import CoordinateDetector
  File "/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py", line 219
    object_descriptions = []
IndentationError: unexpected indent
Traceback (most recent call last):
  File "/home/denis/Documents/Hackathon_2025/geo_locator/backend/app.py", line 241, in <module>
    from routes.object_group_api import bp as object_group_api_bp
  File "/home/denis/Documents/Hackathon_2025/geo_locator/backend/routes/object_group_api.py", line 5, in <module>
    from services.coordinate_detector import CoordinateDetector
  File "/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py", line 219
    object_descriptions = []
IndentationError: unexpected indent
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py', reloading
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
❌ Coordinate API registration failed: unexpected indent (coordinate_detector.py, line 219)
❌ Object Group API registration failed: unexpected indent (coordinate_detector.py, line 219)
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py', reloading
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Coordinate API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py', reloading
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Coordinate API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
INFO:werkzeug: * Detected change in '/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/coordinate_detector.py', reloading
✅ Maps API registered successfully
Warning: YOLOViolationDetector not available: cannot import name 'YOLOViolationDetector' from 'services.yolo_violation_detector' (/home/denis/Documents/Hackathon_2025/geo_locator/backend/services/yolo_violation_detector.py)
✅ Violation API registered successfully
✅ Geo API registered successfully
✅ Cache API registered successfully
✅ Rosreestr API registered successfully
✅ OpenStreetMap API registered successfully
❌ Sentinel API registration failed: attempted relative import beyond top-level package
✅ Satellite API registered successfully
✅ OCR API registered successfully
✅ Notification API registered successfully
✅ Coordinate API registered successfully
✅ Object Group API registered successfully
🚀 Starting Geo Locator Backend (Local Development)
==================================================
✅ PostgreSQL connection successful
✅ Redis connection successful
✅ Database tables created successfully

🎉 All checks passed! Starting Flask development server...
📍 Backend will be available at: http://localhost:5001
📍 API endpoints at: http://localhost:5001/api/

Press Ctrl+C to stop the server
==================================================
INFO:werkzeug: * Restarting with stat
INFO:services.cache_service:Connected to Redis at redis://localhost:6379/0
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:routes.geo_api:Geo services initialized successfully
/home/denis/Documents/Hackathon_2025/geo_locator/backend/venv/lib/python3.12/site-packages/ultralytics/nn/tasks.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(file, map_location='cpu'), file  # load
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:✅ YOLO detector initialized
INFO:services.osm_overpass_service:🗺️ OSM Overpass Service initialized
INFO:services.coordinate_detector:✅ API services initialized (Yandex, 2GIS, Roscosmos)
WARNING:services.google_vision_service:GOOGLE_API_KEY not found in environment variables
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.google_vision_service:🏛️ Archive service integrated into Google Vision
WARNING:services.google_vision_service:Google Cloud Vision credentials not found
INFO:services.coordinate_detector:✅ Google Vision service initialized
INFO:services.archive_photo_service:🏛️ Archive Photo Service initialized with 3 photos
INFO:services.coordinate_detector:🏛️ Archive Photo service initialized
INFO:services.mistral_ai_service:🤖 AI initialized with API key: OE9txswT...
INFO:services.dgis_panorama_service:🗺️ 2GIS Panorama service initialized
INFO:services.yolo_violation_detector:Loaded pretrained YOLOv8n model
INFO:services.yolo_violation_detector:YOLOv8 Object Detector initialized on cpu
INFO:services.coordinate_detector:🎯 Enhanced Coordinate Detector initialized
INFO:services.coordinate_detector:Coordinate Detector initialized
INFO:services.video_coordinate_detector:Video Coordinate Detector initialized
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 111-291-728
