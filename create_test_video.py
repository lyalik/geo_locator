#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤–∏–¥–µ–æ –∞–Ω–∞–ª–∏–∑–∞
"""
import cv2
import os
import numpy as np
from PIL import Image

def create_test_video():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    
    # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    image_path = "backend/uploads/coordinates/1krasn_pl2-3797155958.jpg"
    output_path = "backend/uploads/videos/test_video.mp4"
    
    if not os.path.exists(image_path):
        print(f"‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {image_path}")
        return False
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = cv2.imread(image_path)
        if img is None:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
            return False
        
        height, width, layers = img.shape
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–µ–æ
        fps = 1  # 1 –∫–∞–¥—Ä –≤ —Å–µ–∫—É–Ω–¥—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        duration = 3  # 3 —Å–µ–∫—É–Ω–¥—ã
        total_frames = fps * duration
        
        # –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ writer
        fourcc = cv2.VideoWriter_fourcc(*'mp4v')
        video_writer = cv2.VideoWriter(output_path, fourcc, fps, (width, height))
        
        if not video_writer.isOpened():
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ writer")
            return False
        
        print(f"üìπ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ...")
        print(f"   –†–∞–∑–º–µ—Ä: {width}x{height}")
        print(f"   FPS: {fps}")
        print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} —Å–µ–∫")
        print(f"   –ö–∞–¥—Ä–æ–≤: {total_frames}")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–∞–¥—Ä—ã (–æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
        for frame_num in range(total_frames):
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
            frame = img.copy()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –∫–∞–¥—Ä–∞ –≤ —É–≥–æ–ª
            cv2.putText(frame, f"Frame {frame_num + 1}", 
                       (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
            
            video_writer.write(frame)
            print(f"   –ó–∞–ø–∏—Å–∞–Ω –∫–∞–¥—Ä {frame_num + 1}/{total_frames}")
        
        # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        video_writer.release()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(output_path)
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {output_path}")
        print(f"   –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size / 1024:.1f} KB")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ: {e}")
        return False

if __name__ == "__main__":
    print("üé¨ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –í–ò–î–ï–û")
    print("=" * 40)
    
    success = create_test_video()
    
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏!")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ")
