#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
"""

import requests
import json
import os
from PIL import Image
import io

def create_simple_test_image():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
    img = Image.new('RGB', (400, 300), color='red')
    test_image_path = '/tmp/simple_test_image.jpg'
    img.save(test_image_path, 'JPEG')
    return test_image_path

def test_coordinate_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /api/coordinate/detect...")
    
    image_path = create_simple_test_image()
    url = 'http://localhost:5001/api/coordinates/detect'
    
    with open(image_path, 'rb') as f:
        files = {'image': ('test.jpg', f, 'image/jpeg')}
        data = {'location_hint': '–ú–æ—Å–∫–≤–∞'}
        
        try:
            response = requests.post(url, files=files, data=data, timeout=15)
            
            print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
                if 'coordinates' in result:
                    coords = result['coordinates']
                    print(f"üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {coords}")
                
                if 'satellite_data' in result:
                    print(f"üõ∞Ô∏è –°–ø—É—Ç–Ω–∏–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {result['satellite_data']}")
                
                if 'location_info' in result:
                    print(f"üìç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏: {result['location_info']}")
                
                if 'detected_objects' in result:
                    print(f"üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã: {len(result.get('detected_objects', []))}")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    if os.path.exists(image_path):
        os.remove(image_path)

def check_backend_health():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É backend"""
    print("üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è backend...")
    
    try:
        response = requests.get('http://localhost:5001/health', timeout=5)
        if response.status_code == 200:
            health = response.json()
            print(f"‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç: {health}")
            return True
        else:
            print(f"‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å backend: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ä–∞–∑–¥–µ–ª–∞ '–ê–Ω–∞–ª–∏–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç'")
    print("=" * 50)
    
    if check_backend_health():
        print()
        test_coordinate_api()
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –≤ —Ñ–∞–π–ª–µ .env")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ '–ê–Ω–∞–ª–∏–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç'")
    print("4. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–≤—ã–µ —Å–µ–∫—Ü–∏–∏")
