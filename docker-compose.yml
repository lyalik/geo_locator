version: '3.8'

services:
  db:
    image: postgis/postgis:16-3.4
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7.4
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  backend:
    build: ./backend
    command: flask run --host=0.0.0.0
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CELERY_BROKER_URL=redis://redis:6380/0
      - CELERY_RESULT_BACKEND=redis://redis:6380/0

  celery:
    build: ./backend
    command: celery -A app.celery worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6380/0
      - CELERY_RESULT_BACKEND=redis://redis:6380/0
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

  frontend:
    build: ./frontend
    command: npm start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  db_data:
  redis_data:
